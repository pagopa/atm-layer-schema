{{- if .Values.job.create -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.job.name }}
  namespace: {{ .Values.namespace }}
  labels:
    App: {{ .Values.job.name }}
  annotations:
    {{- toYaml .Values.job.annotations | nindent 4 }}
spec:
  template:
    metadata:
      labels:
        App: {{ .Values.job.name }}
        force-recreate: {{ randAlphaNum 5 | quote }}
    spec:
      serviceAccountName: {{ include "atm-layer-schema.serviceAccountName" . }}
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true 
          volumeAttributes:
            secretProviderClass: {{ .Values.secretProviderClass.name }}
      containers:
        - name: {{ .Values.job.name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - containerPort: {{ .Values.service.port }}
          imagePullPolicy: Always
          env:
            - name: SCHEMA_DB_TYPE
              value: "{{ .Values.database.type }}"
            - name: SCHEMA_DB_URL
              value: "{{ .Values.database.url }}"
            - name: SCHEMA_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.credentialsSecretName }}
                  key: {{ .Values.database.credentialsSecretKeys.username }}
            - name: SCHEMA_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.credentialsSecretName }}
                  key: {{ .Values.database.credentialsSecretKeys.password }}
          volumeMounts:
          - name: secrets-store-inline
            mountPath: "/mnt/secrets-store"
            readOnly: true

      restartPolicy: Never
  backoffLimit: 0
{{- end }}
